// style the background color of the tree view
.tree-view {
  // background-color: whitesmoke;
}

// style the background and foreground colors on the atom-text-editor-element itself
atom-text-editor {
  color: white;
  background-color: hsl(180, 24%, 12%);
}

// style UI elements inside atom-text-editor
atom-text-editor .cursor {
  border-color: white;
}


// this changes the Lua syntax highlighting for comments
atom-text-editor .syntax--comment.syntax--lua {
  color: rgb(0, 128, 0);
}

// this changes the Lua syntax highlighting for constents
atom-text-editor .syntax--constant.syntax--language.syntax--lua {
  color: rgb(0, 128, 220);
}
// this changes the Lua syntax highlighting for controls
atom-text-editor .syntax--keyword.syntax--control.syntax--lua {
  color: rgb(0, 128, 220);
}

// this changes the Lua syntax highlighting for support methods (i.e, math.random)
atom-text-editor .syntax--support.syntax--function.syntax--library.syntax--lua {
  color: rgb(255, 0, 128);
}

// this changes the Lua syntax highlighting for any of the following characters (not including comma): =, +, ~, ..
atom-text-editor .syntax--keyword.syntax--operator.syntax--lua {
  color: rgb(51, 133, 255);
}

// this changes the Lua syntax highlighting of function names, i.e OnPlayerJoin
atom-text-editor .syntax--entity.syntax--name.syntax--function.syntax--lua {
  color: rgb(220, 0, 0);
}

// bracket highlighter
atom-text-editor::shadow {
  .highlights .bracket-matcher .region {
    border-bottom: 0px;
    background-color: red;
  }
}

// show a dotted line underneath folded lines
@import (reference) "syntax-variables";
atom-text-editor::shadow {
  .fold-marker {
    &::before {
      content: "";
      display: block;
      position: absolute;
      left: 0;
      right: 0;
      border-bottom: 1px dashed @syntax-invisible-character-color;
    }
  }
  .line.cursor-line .fold-marker {
    &::after {
      color: @syntax-text-color;
    }
    &::before {
      border-color: @syntax-text-color;
    }
  }
}
